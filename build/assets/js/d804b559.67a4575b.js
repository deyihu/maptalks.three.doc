"use strict";(self.webpackChunkmaptalks_three_doc=self.webpackChunkmaptalks_three_doc||[]).push([[3252],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=l(r),d=a,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||o;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},4846:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return f}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),c=["components"],i={sidebar_position:1},s="getFetchDataActor",l={unversionedId:"api/others/getFetchDataActor",id:"api/others/getFetchDataActor",title:"getFetchDataActor",description:"This allows batch processing of JSON requests,Easy to load large-scale geojson data files",source:"@site/docs/api/others/getFetchDataActor.md",sourceDirName:"api/others",slug:"/api/others/getFetchDataActor",permalink:"/maptalks.three.doc/build/docs/api/others/getFetchDataActor",editUrl:"https://github.com/deyihu/maptalks.three.doc/blob/main/docs/api/others/getFetchDataActor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"geometryExtrude",permalink:"/maptalks.three.doc/build/docs/api/others/geometryExtrude"}},u=[{value:"Example",id:"example",children:[],level:2}],p={toc:u};function f(e){var t=e.components,r=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getfetchdataactor"},"getFetchDataActor"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"This allows batch processing of JSON requests,Easy to load large-scale geojson data files")," "),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"//detail https://github.com/maptalks/maptalks.three/blob/master/demo/fetchdatatest.html\n import {getFetchDataActor} from 'maptalks.three';\n\n const fetDataActor = getFetchDataActor();\n\n for (let i = 100; i >= 0; i--) {\n        const url = maptalks.Util.getAbsoluteURL(`./data/ny/${i}.json`);\n        fetDataActor.send(url, [], (error, arrayBuffer) => {\n                    // console.log(data);\n        const text = arrayBufferToString(arrayBuffer);\n\n        //do some things\n}\n\nvar textDecoder = new TextDecoder(\"utf-8\");\n//arraybuffer to text\nfunction arrayBufferToString(buffer) {\n     const array = new Uint8Array(buffer);\n     return textDecoder.decode(array);\n}\n\n")))}f.isMDXComponent=!0}}]);