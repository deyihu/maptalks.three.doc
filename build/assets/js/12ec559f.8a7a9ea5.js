"use strict";(self.webpackChunkmaptalks_three_doc=self.webpackChunkmaptalks_three_doc||[]).push([[8007],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=i,k=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(k,o(o({ref:t},c),{},{components:r})):n.createElement(k,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=r[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},1551:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={sidebar_position:1},p="MergedMixin",s={unversionedId:"api/others/MergedMixin",id:"api/others/MergedMixin",title:"MergedMixin",description:"This is for Merge Mesh. When there is a large amount of data, you may need to merge mesh. At this time, you need to MergedMixin",source:"@site/docs/api/others/MergedMixin.md",sourceDirName:"api/others",slug:"/api/others/MergedMixin",permalink:"/maptalks.three.doc/build/docs/api/others/MergedMixin",editUrl:"https://github.com/deyihu/maptalks.three.doc/blob/main/docs/api/others/MergedMixin.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docs",previous:{title:"Others",permalink:"/maptalks.three.doc/build/docs/category/others"},next:{title:"MergeGeometryUtil",permalink:"/maptalks.three.doc/build/docs/api/others/MergeGeometryUtil"}},c=[{value:"properties",id:"properties",children:[],level:2},{value:"Methods",id:"methods",children:[],level:2},{value:"Example",id:"example",children:[],level:2}],m={toc:c};function u(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mergedmixin"},"MergedMixin"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This is for Merge Mesh. When there is a large amount of data, you may need to merge mesh. At this time, you need to ",(0,a.kt)("a",{parentName:"strong",href:"https://github.com/maptalks/maptalks.three/blob/master/src/MergedMixin.ts"},"MergedMixin"))," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import {BaseObject,MergedMixin} from 'maptalks.three`;\n//custom TestBaseObject Merge BaseObject\nclass TestBaseObject extends MergedMixin(BaseObject){\n    constructor(.....){\n        ........\n    }\n\n    .......\n}\n\n")),(0,a.kt)("h2",{id:"properties"},"properties"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"_colorMap ",(0,a.kt)("inlineCode",{parentName:"li"},"color map")),(0,a.kt)("li",{parentName:"ul"},"_faceMap ",(0,a.kt)("inlineCode",{parentName:"li"},"geometries face map")),(0,a.kt)("li",{parentName:"ul"},"_baseObjects ",(0,a.kt)("inlineCode",{parentName:"li"},"baseobjects")),(0,a.kt)("li",{parentName:"ul"},"_datas ",(0,a.kt)("inlineCode",{parentName:"li"},"data list")),(0,a.kt)("li",{parentName:"ul"},"_geometriesAttributes ",(0,a.kt)("inlineCode",{parentName:"li"},"geometries attributes map,uv,position,normal....")),(0,a.kt)("li",{parentName:"ul"},"_geometryCache"),(0,a.kt)("li",{parentName:"ul"},"faceIndex ",(0,a.kt)("inlineCode",{parentName:"li"},"face index")),(0,a.kt)("li",{parentName:"ul"},"index ",(0,a.kt)("inlineCode",{parentName:"li"},"data index"))),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"_initBaseObjectsEvent(baseobjects) ",(0,a.kt)("inlineCode",{parentName:"li"},"proxy all baseobject events"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"baseobjects ",(0,a.kt)("inlineCode",{parentName:"li"},"Array[BaseObject]")),(0,a.kt)("li",{parentName:"ul"},"return  ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"_setPickObject3d() ",(0,a.kt)("inlineCode",{parentName:"li"},"set pick object3d for gpu pick"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"return  ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"_init() ",(0,a.kt)("inlineCode",{parentName:"li"},"Listen for baseobject add/remove events for add/remove pickobject3d"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"return  ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"        _init(): void {\n            const pick = this.getLayer().getPick();\n            this.on('add', () => {\n                pick.add(this.pickObject3d);\n            });\n            this.on('remove', () => {\n                pick.remove(this.pickObject3d);\n            });\n        }  \n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://maptalks.org/maptalks.three/demo/custom-mergedmixin.html"},"custom-mergedmixin")))}u.isMDXComponent=!0}}]);